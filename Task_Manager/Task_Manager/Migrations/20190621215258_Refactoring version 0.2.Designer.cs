// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task_Manager;

namespace Task_Manager.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20190621215258_Refactoring version 0.2")]
    partial class Refactoringversion02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task_Manager.Models.Child", b =>
                {
                    b.Property<int>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Surname");

                    b.Property<int>("UserId");

                    b.HasKey("ChildId");

                    b.ToTable("Childs");
                });

            modelBuilder.Entity("Task_Manager.Models.TaskElement", b =>
                {
                    b.Property<int>("TaskElementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("Periodicity");

                    b.Property<DateTime>("Point");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("TaskCategory");

                    b.Property<string>("TaskName");

                    b.Property<int>("TaskTypeId");

                    b.HasKey("TaskElementId");

                    b.ToTable("TaskModels");
                });

            modelBuilder.Entity("Task_Manager.Models.TaskForDate", b =>
                {
                    b.Property<int>("TaskForDateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChildId");

                    b.Property<DateTime>("DateOfTask");

                    b.Property<bool>("IsDone");

                    b.Property<int?>("TaskElementId");

                    b.HasKey("TaskForDateId");

                    b.HasIndex("TaskElementId");

                    b.ToTable("TaskForDates");
                });

            modelBuilder.Entity("Task_Manager.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("Surname");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Task_Manager.Models.TaskForDate", b =>
                {
                    b.HasOne("Task_Manager.Models.TaskElement", "TaskElement")
                        .WithMany()
                        .HasForeignKey("TaskElementId");
                });
#pragma warning restore 612, 618
        }
    }
}
